{# helper-macro zum mergen der vlans #}
{% import 'functions/helpers.j2' as helpers with context %}
{% set vlans_merged = ({}) %}
{% if group is defined %}
{{ helpers.merge_vlans(group.vlan_groups, vlans_merged) }}
{% endif %}



{# interfaces config template macro #}

{% macro junos_general() -%}
interfaces {
{% if if_ranges is defined %}
    {% for ifrange_name in if_ranges|sort %}
    {% set ir = if_ranges[ifrange_name] %}
    interface-range {{ ifrange_name }} {
        {% if ir.member_ranges is defined %}
            {% if ir.member_ranges is string %}
        member-range {{ ir.member_ranges }};
            {% elif ir.member_ranges is sequence %}
                {% for rng in ir.member_ranges %}
        member-range {{ rng }};
                {% endfor %}
            {% endif %}
        {% endif %}
        {% if ir.members is defined %}
            {% if ir.members is string %}
        member {{ ir.members }};
            {% elif ir.members is sequence %}
                {% for intf in ir.members %}
        member {{ intf }};
                {% endfor %}
            {% endif %}
        {% endif %}
    {# call interface sub template #}
    {{ subtemplate_int(ir, ifrange_name, false) }}
    }
    {% endfor %}
{% endif -%}

{% for interface_name in interfaces|sort %}
{% set _int = interfaces[interface_name] %}
    {{ interface_name }} {
    {% if units is defined %}
        {% for unit_name in units %}
        {% set unit = units[unit_name] %}
        {# call interface sub template #}
        {{ subtemplate_int(unit, unit_name, true) }}
        {% endfor %}
    {% else %}
        {# call interface sub template #}
        {{ subtemplate_int(_int, interface_name, false) }}
    {% endif %}
    }
{% endfor -%}

{% if no_mgmt_int is not defined %}
    me0 {
        unit 0 {
            description "{{ inventory_hostname }} local OOB Mgmt";
            family inet {
                address 169.254.1.1/16;
            }
            family inet6;
        }
    }
{% endif -%}

{% if vlan_units is defined %}
    {% if junos_els is defined and junos_els == true %}
    irb {
    {% else %}
    vlan {
    {% endif %}
    {% for vlan_unit_name in vlan_units|sort %}
    {% set vu = vlan_units[vlan_unit_name] %}
        {# call interface sub template #}
        {{ subtemplate_int(vu, vlan_unit_name, true) }}
    {% endfor %}
    }
{% endif -%}

}
{%- endmacro %}



{# sub template fuer interface config #}
{# _p = parent  #}

{% macro subtemplate_int(_p, _p_name, unit) %}

    {% if _p.desc is defined and unit == false %}
        description "{{ _p.desc }}";
    {% endif -%}

    {% if _p.disable is defined and _p.disable == true %}
        disable;
    {% endif -%}

    {% if _p.mtu is defined %}
        mtu {{ _p.mtu }};
    {% endif -%}

    {% if _p.etheroptions is defined %}
        ether-options {
        {% if _p.etheroptions.lacp_interface is defined %}
            802.3ad {{ _p.etheroptions.lacp_interface }};
        {% endif %}
        {% if _p.etheroptions.no_autoneg is defined and _p.etheroptions.no_autoneg == true %}
            no-auto-negotiation;
        {% endif %}
        {% if _p.etheroptions.duplex is defined and _p.etheroptions.duplex == 'full' %}
            link-mode full-duplex;
        {% elif _p.etheroptions.duplex is defined and _p.etheroptions.duplex == 'half' %}
            no-flow-control;
            link-mode half-duplex;
        {% endif %}
        {% if _p.etheroptions.speed is defined %}
            speed {
                {{ _p.etheroptions.speed }};
            }
        {% endif %}
        }
    {% endif -%}

    {% if _p_name is not number and 'ae' in _p_name %}
        aggregated-ether-options {
            lacp {
                active;
            }
        }
    {% endif -%}

    {% if (_p.mode is defined or
           _p.vlans is defined or
           _p.vlan_groups is defined) %}
        unit 0 {
            family ethernet-switching {
            {% if _p.mode is defined %}
                {% if junos_els is defined and junos_els == true %}
                interface-mode {{ _p.mode }};
                {% else %}
                port-mode {{ _p.mode }};
                {% endif %}
            {% endif %}
            {% if _p.vlans is defined %}
                vlan {
                    members{{' '}}
                {%- if _p.vlans == 'all' -%}
                    all;
                {% elif _p.vlans is number -%}
                    {{ vlans_merged[_p.vlans] }};
                {% elif _p.vlans is sequence -%}
                    [ {% for vln in _p.vlans|sort %}{{ vlans_merged[vln] }} {% endfor %}];
                {% endif %}
                }
            {% elif _p.vlan_groups is defined %}
            {% set int_vlans_merged = ({}) %}
            {{ helpers.merge_vlans(_p.vlan_groups, int_vlans_merged) }}
                vlan {
                    members [ {% for vlns in int_vlans_merged|sort %}{{ int_vlans_merged[vlns] }} {% endfor %}];
                }
            {% endif %}
            {% if _p.native is defined %}
                native-vlan-id {{ _p.native }};
            {% endif %}
            {% if junos_els is defined and junos_els == true %}
                storm-control standard;
            {% endif %}
            }
        }
    {%- endif -%}

    {% if _p.ipv4 is defined or _p.ipv6 is defined %}
        {% if unit == false %}
        unit 0 {
        {% elif unit == true %}
        unit {{ _p_name }} {
        {% endif %}
        {% if _p.desc is defined and unit == true %}
            description "{{ _p.desc }}";
        {% endif %}
        {% if _p.ipv4 is defined %}
            family inet {
            {% if _p.ipv4.addr is mapping %}
                {% for address_value in _p.ipv4.addr %}
                address {{ address_value }};
                {% endfor %}
            {% else %}
                address {{ _p.ipv4.addr }};
            {% endif %}
            }
        {% endif %}
        {% if _p.ipv6 is defined %}
            family inet6 {
            {% if _p.ipv6.addr is mapping %}
                {% for address_value in _p.ipv6.addr %}
                address {{ address_value }};
                {% endfor %}
            {% else %}
                address {{ _p.ipv6.addr }};
            {% endif %}
            }
        {% endif %}
        }
    {% endif -%}

{%- endmacro %}