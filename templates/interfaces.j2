{# helper-macro zum mergen der vlans #}
{% import 'templates/helper-functions.j2' as helpers with context %}
{% set vlans_merged = ({}) %}
{% if group is defined %}
{{ helpers.merge_vlans(group.vlan_groups, vlans_merged) }}
{% endif %}



{# interfaces config template macro #}

{% macro junos_general() -%}
interfaces {
{% if if_ranges is defined %}
    {% for ifrange_name in if_ranges|sort %}
    {% set ir = if_ranges[ifrange_name] %}
    interface-range {{ ifrange_name }} {
        {% if ir.member_ranges is defined %}
            {% if ir.member_ranges is string %}
        member-range {{ ir.member_ranges }};
            {% elif ir.member_ranges is sequence %}
                {% for rng in ir.member_ranges %}
        member-range {{ rng }};
                {% endfor %}
            {% endif %}
        {% endif %}
        {% if ir.members is defined %}
            {% if ir.members is string %}
        member {{ ir.members }};
            {% elif ir.members is sequence %}
                {% for intf in ir.members %}
        member {{ intf }};
                {% endfor %}
            {% endif %}
        {% endif %}
    {# call interface sub template #}
    {{ subtemplate_int(ir, ifrange_name, false, none) }}
    }
    {% endfor %}
{% endif -%}

{% for interface_name in interfaces|sort %}
{% set _int = interfaces[interface_name] %}
    {{ interface_name }} {
    {# call interface sub template #}
    {{ subtemplate_int(_int, interface_name, false, none) -}}
    {% if _int.units is defined %}
        {% for unit_name in _int.units %}
        {% set unit = _int.units[unit_name] %}
        {# call interface sub template #}
        {{ subtemplate_int(unit, unit_name, true, _int) -}}
        {% endfor %}
    {% endif %}
    }
{% endfor -%}

{% if no_mgmt_int is not defined %}
    me0 {
        unit 0 {
            description "{{ inventory_hostname }} local OOB Mgmt";
            family inet {
                address 169.254.1.1/16;
            }
            family inet6;
        }
    }
{% endif -%}

{% if vlan_units is defined %}
    {% if junos_els is not defined or junos_els == true %}
    irb {
    {% else %}
    vlan {
    {% endif %}
    {% for vlan_unit_name in vlan_units|sort %}
    {% set vu = vlan_units[vlan_unit_name] %}
        {# call interface sub template #}
        {{ subtemplate_int(vu, vlan_unit_name, true, none) -}}
    {% endfor %}
    }
{% endif -%}

}
{%- endmacro %}



{# sub template fuer interface config #}

{% macro subtemplate_int(_i, _i_name, unit, parent) %}

    {% if _i.desc is defined and unit == false %}
        description "{{ _i.desc }}";
    {% endif -%}

    {% if _i.disable is defined and _i.disable == true %}
        disable;
    {% endif -%}

    {% if _i.mtu is defined %}
        mtu {{ _i.mtu }};
    {% endif -%}

    {% if _i.vlan_tagging is defined and _i.vlan_tagging == true %}
        vlan-tagging;
    {% endif -%}

    {% if _i.native is defined %}
        {% if junos_els is not defined or junos_els == true %}
        native-vlan-id {{ _i.native }};
        {% endif %}
    {% endif %}

    {% if _i.etheroptions is defined %}
        {% if device_type is defined %}
            {% if device_type == ('srx' or 'mx') %}
        gigether-options {
            {% endif %}
        {% else %}
        ether-options {
        {% endif %}
        {% if _i.etheroptions.redundant_parent is defined %}
            redundant-parent {{ _i.etheroptions.redundant_parent }};
        {% endif %}
        {% if _i.etheroptions.lacp_interface is defined %}
            802.3ad {{ _i.etheroptions.lacp_interface }};
        {% endif %}
        {% if _i.etheroptions.no_autoneg is defined and _i.etheroptions.no_autoneg == true %}
            no-auto-negotiation;
        {% endif %}
        {% if junos_els is defined and junos_els == false %}
            {% if _i.etheroptions.duplex is defined and _i.etheroptions.duplex == 'full' %}
            link-mode full-duplex;
            {% elif _i.etheroptions.duplex is defined and _i.etheroptions.duplex == 'half' %}
            no-flow-control;
            link-mode half-duplex;
            {% endif %}
            {% if _i.etheroptions.speed is defined %}
            speed {
                {{ _i.etheroptions.speed }};
            }
            {% endif %}
        {% endif %}
        }
    {% endif -%}

    {% if junos_els is not defined or junos_els == true %}
        {% if _i.etheroptions.duplex is defined and _i.etheroptions.duplex == 'full' %}
        link-mode full-duplex;
        {% elif _i.etheroptions.duplex is defined and _i.etheroptions.duplex == 'half' %}
        no-flow-control;
        link-mode half-duplex;
        {% endif %}
        {% if _i.etheroptions.speed is defined %}
        speed {{ _i.etheroptions.speed }};
        {% endif %}
    {% endif %}

    {% if _i.fabricoptions is defined %}
        fabric-options {
        {% if _i.fabricoptions.members is defined %}
            member-interfaces {
                {% for i in _i.fabricoptions.members %}
                {{ i }};
                {% endfor %}
            }
        {% endif %}
        }
    {% endif -%}

    {% if _i.redundancy_group is defined %}
        redundant-ether-options {
            redundancy-group {{ _i.redundancy_group }};
        }
    {% endif -%}

    {% if _i_name is not number and 'ae' in _i_name %}
        aggregated-ether-options {
        {% if _i.speed_individual_links is defined %}
            link-speed {{ _i.speed_individual_links }};
        {% endif %}
            lacp {
                active;
            }
        }
    {% endif -%}

    {% if (_i.mode is defined or
           _i.vlans is defined or
           _i.vlan_groups is defined) %}
        unit 0 {
            family ethernet-switching {
            {% if _i.mode is defined %}
                {% if junos_els is not defined or junos_els == true %}
                interface-mode {{ _i.mode }};
                {% else %}
                port-mode {{ _i.mode }};
                {% endif %}
            {% endif %}
            {% if _i.vlans is defined %}
                vlan {
                    members{{' '}}
                {%- if _i.vlans == 'all' -%}
                    all;
                {% elif _i.vlans is number -%}
                    {{ vlans_merged[_i.vlans] }};
                {% elif _i.vlans is sequence -%}
                    [ {% for vln in _i.vlans|sort %}{{ vlans_merged[vln] }} {% endfor %}
                        {% if _i.native is defined %}
                          {% if junos_els is not defined or junos_els == true %}{{ _i.native }}{% endif %}
                        {% endif %}];
                {% endif %}
                }
            {% elif _i.vlan_groups is defined %}
            {% set int_vlans_merged = ({}) %}
            {{ helpers.merge_vlans(_i.vlan_groups, int_vlans_merged) }}
                vlan {
                    members [ {% for vlns in int_vlans_merged|sort %}{{ int_vlans_merged[vlns] }} {% endfor %}];
                }
            {% endif %}
            {% if _i.native is defined %}
                {% if junos_els is not defined or junos_els == true %}
                    {# do nothing here; simpler than testing negative conditions #}
                {% else %}
                native-vlan-id {{ _i.native }};
                {% endif %}
            {% endif %}
            {% if junos_els is not defined or junos_els == true %}
                storm-control standard;
            {% endif %}
            }
        }
    {% endif -%}

    {% if _i.ipv4 is defined or _i.ipv6 is defined %}
        {% if unit == false %}
        unit 0 {
        {% elif unit == true %}
        unit {{ _i_name }} {
        {% endif %}
        {% if _i.desc is defined and unit == true %}
            description "{{ _i.desc }}";
        {% endif %}
        {% if parent.vlan_tagging is defined and parent.vlan_tagging == true %}
            vlan-id {{ _i_name }};
        {% endif %}
        {% if _i.ipv4 is defined %}
            family inet {
            {% if _i.ipv4.filter is defined %}
                {{ subtemplate_filter(_i.ipv4.filter) -}}
            {% endif %}
            {%- for _adr in _i.ipv4.addresses %}
                {{ subtemplate_ip(_adr) -}}
            {% endfor %}
            }
        {% endif %}
        {% if _i.ipv6 is defined %}
            family inet6 {
            {%- for _adr in _i.ipv6.addresses %}
                {{ subtemplate_ip(_adr) -}}
            {% endfor %}
            }
        {% endif %}
        }
    {% endif -%}

    {% if ae_ranges is defined %}
        {% for ae_range_name in ae_ranges %}
        {% set ae_range = ae_ranges[ae_range_name] %}
            {% if ae_range.members is string and ae_range.members == _i_name %}
                    {{ subtemplate_int(ae_range, ae_range_name, false, none) }}
            {% elif ae_range.members is sequence %}
                {% for member in ae_range.members %}
                    {% if member == _i_name %}
                    {{ subtemplate_int(ae_range, ae_range_name, false, none) }}
                    {% endif %}
                {% endfor %}
            {% endif %}
        {% endfor %}
    {% endif %}

{%- endmacro %}


{# sub template fuer ip config (v4 + v6) #}

{% macro subtemplate_ip(_adr) %}

{% if _adr.type is defined or _adr.static_arp is defined %}
                address {{ _adr.ip }} {
    {% if _adr.type is defined and _adr.type is string %}
                    {{ _adr.type }};
    {% elif _adr.type is defined and _adr.type is sequence %}
        {% for _type in _adr.type %}
                    {{ _type }};
        {% endfor %}
    {% endif %}
    {% if _adr.static_arp is defined %}
        {% for _entry in _adr.static_arp %}
                    arp {{ _entry }} mac {{ _adr.static_arp[_entry] }};
        {% endfor %}
    {% endif %}
                }
{% else %}
                address {{ _adr.ip }};
{% endif %}
{%- endmacro %}


{# sub template fuer filter config #}

{% macro subtemplate_filter(filter) %}
filter {
{% if filter.input is defined %}
                    input {{ filter.input }};
{% endif %}
{% if filter.output is defined %}
                    output {{ filter.output }};
{% endif %}
                }
{%- endmacro %}