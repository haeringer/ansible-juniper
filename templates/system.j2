{# system config template macro #}

{% macro junos_general() -%}
/* Config generated by Ansible */
system {
    host-name {{ inventory_hostname }};
    {% if junos_els is not defined or junos_els == true %}
    auto-snapshot;
    {% endif %}
    domain-name {{ domain_name }};
    time-zone {{ time_zone }};
    no-redirects;
    authentication-order [ tacplus password ];
    root-authentication {
        encrypted-password "{{ root_password }}"; ## SECRET-DATA
    }
    name-server {
    {% for namesrv in dns.servers %}
        {{ namesrv }};
    {% endfor %}
    }
    tacplus-server {
    {% for tacsrv in tacacs.servers %}
        {{ tacsrv.ip }} {
            port 49;
            secret "{{ tacsrv.secret }}"; ## SECRET-DATA
            timeout 10;
            single-connection;
        }
    {% endfor %}
    }
    login {
		announcement "\n\t####   SYSTEM CONFIG GENERATED BY ANSIBLE   ####\n\n\tInfo about configuring:\n\thttps://github.com/haeringer/ansible-juniper/blob/master/host_vars/README.md\n\n\n";
	{% for cls in classes %}
        class {{ cls.name }} {
            permissions [ {% for p in cls.permissions %}{{ p }} {% endfor %}];
        }
    {% endfor %}
    {% for usr in users %}
        user {{ usr.name }} {
            class {{ usr.class }};
            {% if usr.passwd is defined %}
            authentication {
                encrypted-password "{{ usr.passwd }}"; ## SECRET-DATA
            }
            {% elif usr.ssh_key is defined %}
            authentication {
                ssh-rsa "{{ usr.ssh_key }}"; ## SECRET-DATA
            }
            {% endif %}
        }
    {% endfor %}
    }
    services {
        ssh {
            root-login deny;
            protocol-version v2;
            rate-limit 10;
        }
        netconf {
            ssh;
        }
    }
    syslog {
        user * {
            any emergency;
        }
        file messages {
            any notice;
            authorization info;
        }
        file interactive-commands {
            interactive-commands any;
        }
    }
    {% if virtualchassis is defined %}
    commit synchronize;
    {% endif %}
    ntp {
    {% for ntpsrv in ntp.servers %}
        server {{ ntpsrv }};
    {% endfor %}
    }
}
{%- endmacro %}


{% macro junos_srx() -%}
/* Config generated by Ansible */
system {
    {% if junos_els is not defined or junos_els == true %}
    auto-snapshot;
    {% endif %}
    domain-name example.com;
    domain-search [ internal.example.com mgmt.example.com ];
    time-zone {{ time_zone }};
    no-redirects;
    authentication-order [ tacplus password ];
    ports {
        console {
            log-out-on-disconnect;
            type vt100;
        }
    }
    root-authentication {
        encrypted-password "{{ root_password }}"; ## SECRET-DATA
    }
    name-server {
    {% for namesrv in dns.servers %}
        {{ namesrv }};
    {% endfor %}
    }
    tacplus-server {
    {% for tacsrv in tacacs.servers %}
        {{ tacsrv.ip }} {
            port 49;
            secret "{{ tacsrv.secret }}"; ## SECRET-DATA
            timeout 10;
            single-connection;
        }
    {% endfor %}
    }
    login {
		announcement "\n\t####   SYSTEM CONFIG GENERATED BY ANSIBLE   ####\n\n\tInfo about configuring:\n\thttps://github.com/haeringer/ansible-juniper/blob/master/host_vars/README.md\n\n\n";
        class rancid {
            permissions [ access admin firewall flow-tap interface network routing secret security snmp system trace view ];
        }
        class ro-extended {
            permissions [ secret view view-configuration ];
        }
    {% for usr in users %}
        user {{ usr.name }} {
            class {{ usr.class }};
            {% if usr.passwd is defined %}
            authentication {
                encrypted-password "{{ usr.passwd }}"; ## SECRET-DATA
            }
            {% elif usr.ssh_key is defined %}
            authentication {
                ssh-rsa "{{ usr.ssh_key }}"; ## SECRET-DATA
            }
            {% endif %}
        }
    {% endfor %}
    }
    services {
        ssh {
            root-login deny;
            protocol-version v2;
            rate-limit 3;
        }
    {% if xnm is defined %}
        {% if xnm == 'clear-text' %}
        xnm-clear-text;
        {% endif %}
    {% endif %}
        netconf {
            ssh;
        }
    {% if dhcp is defined %}
        dhcp {
        {% for pool_name in dhcp.pools %}
        {% set pool = dhcp.pools[pool_name] %}
            pool {{ pool_name }} {
                address-range low {{ pool.range[0] }} high {{ pool.range[1] }};
            {% if pool.lease_time is defined and pool.lease_time == 'infinite' %}
                maximum-lease-time infinite;
                default-lease-time infinite;
            {% else %}
                maximum-lease-time 432000;
                default-lease-time 86400;
            {% endif %}
                name-server {
                {% for namesrv in dns.servers %}
                    {{ namesrv }};
                {% endfor %}
                }
                router {
                    {{ pool.router }};
                }
                propagate-settings {{ pool.interface }};
            }
            {% if pool.static_bindings is defined %}
                {% for _ip in pool.static_bindings %}
                {% set _mac = pool.static_bindings[_ip] %}
            static-binding {{ _mac }} {
                fixed-address {
                    {{ _ip }};
                }
            }
                {% endfor %}
            {% endif %}
        {% endfor %}
        }
    {% endif %}
    }
    syslog {
        archive size 100k files 3;
        user * {
            any emergency;
        }
        file messages {
            any critical;
            authorization info;
        }
        file interactive-commands {
            interactive-commands any;
        }
        file config-changes {
            change-log info;
        }
        file default-log-messages {
            any any;
            structured-data;
        }
    }
    max-configurations-on-flash 20;
    max-configuration-rollbacks 15;
    ntp {
    {% for ntpsrv in ntp.servers %}
        server {{ ntpsrv }};
    {% endfor %}
    }
}
{%- endmacro %}
